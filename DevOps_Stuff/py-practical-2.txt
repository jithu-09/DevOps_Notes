#import requests

#response = requests.get('https://api.github.com//repos/kubernetes/kubernetes/pulls') # this is an object
# print(response.status_code) # 200
# print(response.headers) # this is a dictionary
# print(response.text) # this is a string
# print(response.json()) # this is a list of dictionaries

#for i in range(len(response.json())): # i is an integer
#    print(response.json()[i]['user']['login']) # this is a string


server_config = {
    'server1': {'ip': '192.168.1.1', 'port': 8080, 'status': 'active'},
    'server2': {'ip': '192.168.1.2', 'port': 8000, 'status': 'inactive'},
    'server3': {'ip': '192.168.1.3', 'port': 9000, 'status': 'active'}
}

def get_server_status(server_name):
    return server_config.get(server_name, {}).get('status', 'Status not found')

server_name = 'server'
status = get_server_status(server_name)
print(f"{server_name} status: {status}")

def update_server_config(filepath, key, value):
    with open(filepath, 'r') as file:
        data = file.readlines()  # Read all lines from the file into a list

    with open(filepath, 'w') as file:
        for line in data:
            if key in line:
                file.write(f"{key}={value}\n")  # Overwrite the line if it contains the key
            else:
                file.write(line)  # Else, write the original line back unchanged


update_server_config('server_config.txt', 'PORT', '9090')


# Server Configuration File

# Network Settings
PORT=9090
MAX_CONNECTIONS=600
TIMEOUT = 30

# Security Settings
SSL_ENABLED = true
SSL_CERT = /path/to/certificate.pem

# Logging Settings
LOG_LEVEL = INFO
LOG_FILE = /var/log/server.log

# Other Settings
ENABLE_FEATURE_X = true
